:title Beti Text Formatter

1. OVERVIEW

 By Mark K Mueller
 mark@markmueller.com
 v2.03 2015-09-17

The Beti text formatting engine will produce HTML documents from a source file
using little more than indented paragraphs and a small set of keywords. The goal
is to produce HTML documents from simple comments without a lot of extra markup
symbols leaving the original comments as uncluttered and readable as possible.
The feature set is intentionally sparse to maintain simplicity. Formatting
features such as headings, text blocks, spans, tables and lists are easily
achieved using a few keywords.


2. Usage

The Beti Text Formatter sends it's output to stdout.

    beti [options] source > output


3. Section Headings

Chapter or section headings are indicated by either a single period or a decimal
number in the first column followed by the section heading and placed on a line
by itself.  It does not matter what numbers you use in each section as they are
incremented automatically. If the first section heading is numbered, all of the
section headings will be numbered.


3.1  Subsection Headings

Level two subsection headings are indicated by a two place decimal number.


4.  Paragraphs

Paragraphs are separated using one or more blank lines. Indented paragraphs will
be formatted using the 'pre' class which is similar to the pre tag. This can be
used to display code snippets.

Example:
    for i := 0; i < 3; i++ {
        println("Rub some bacon on it.")
    }

A paragraph indented with only 1 space will be formatted using the nowrap
class which is similar to the pre tag but will look like a normal paragraph.

 Lorem ipsum bacon pork loin jowl beef.
 Porchetta proident doner nisi incididunt nostrud .
 Cupidatat ea porchetta salami pastrami spam.


5.     Example Text

The word "Example:", with or without a colon, on a line by itself will identify
the following paragraph as example text.  Example text will be formatted using
the "pre" class. The example text will me marked with a anchor tag.  The name of
the anchor tag will be taken from the previous heading name contatenated with "-
example". If more than one example is found within a section, the example tag
names will be numbered,e.g., Example 1, Example 2.

Example:

    Bacon encrusted turkey lips
    Barbequed Possum tongue


6.  Text Spans

An in-line text formatting span is marked with pipe symbols surrounding the text
and an optional single or dual character classname preceding it. Text spans
cannot be nested.

Example 1:

    b\|bold\|             b|bold|
    i\|italic\|           i|italic|
    u\|underline\|        u|underline|
    h\|highlight\|        h|highlight|
    bi\|bold italic\|     bi|bold italic|


7.  Lists

Bulleted lists are automatically generated by using an indented paragraph with
leading hyphens or asterisks.

	- Caffinated bacon
	- Baconated grapefruit
	- Admiral Crunch
    - Archduke Chocula

	* Tempor shank tongue
    * Tempura battered bacon balls
	* Porchetta pastrami ham hock soup

To create a numbered list, just use indented numbers.

    1.  Pork loin tempor consequat magna spare ribs
        jowls bresaola laborum turducken
	2.  Strip steak pancetta
    3.  Skinny fatback deserunt


8.  Directives

The following direcives are optional and are used to modify the default
behaviour of the parser.

    - b|:beti| on|off
      Enable or disable comment parsing. May be used multiple times throughout
      your document.  This directive is not required to begin comment parsing.
      However, it may be used to switch comment parsing off and on in order to
      skip entire sections of comment.

    - b|:title| string
      Used only once in your document, this directive will set the document
      title, overriding the default action of using the first section heading.

    - b|:index| top\|bottom\|none\|default
      Indicate where to place the index.  By default, the index will be placed
      following the first section.

    - b|:nheadings| on\|off
      Enable or disable numbered headings.


9.  Page Anchors

All of the headings automatically receive an anchor tag. The name of the anchor
tags use the heading itself, lowercase and with hyphens in place of spaces.
Creating a link to an anchor tag is accomplished by simply placing a hash symbol
before the tag name as follows.

Example

    #page-anchors

Each heading in this document will automatically get an ID containing the lower
case alpha text within a heading. The leading demial numbers will be removed.
The spaces will be converted into hyphens.


10.  Links

Standard URLs will be converted into links.  Link text can be added by preceding
the URL with a text span. Absolute and relative URLs require the preceding text
span. The following examples show the various ways to construct links:

Example:

	Plain URL:                  http\://example.com/kevin-bacon/
	Link text:                  \|Click this|http\://example.com/kevin-bacon/
	Relative URL with text:     \|Turducken Taco|./turducken-taco.html
	Page anchors:               See \#page-anchors or \#links


Result:

	http://example.com/kevin-bacon/
	|Click this|http://example.com/kevin-bacon/
	|Turducken Taco|./turducken-taco.html
	See #page-anchors or #links


11.  Escape Symbol

To prevent pipe or hash symbols from being interpreted as links, they may be
escaped using a backslash.

Example:

    This \\\#anchor will not be interpreted.

Result:

    This \#anchor will not be interpreted.


12.  Tables

Tables are quite simple to construct. Use a "Table:" directive on a preceding
line by itself.  The data must be aligned in columns using tabs or spaces.  The
heading row will  determine the column alignment.

Example:

    Table\:
	    Qty		 Description		   Price
	    12		 Corned beef		   10.89
	    7		 Pork belly		       14.99

Result:

Table:
	Qty		 Description		   Price
	12		 Corned beef		   10.89
	7		 Pork belly		       14.99

If the format cannot be determined, a preformatted text block (pre) will be used
instead.


13.  References

Sample text horked from |A Meatier Lorem Ipsum Generator|https://baconipsum.com/


:footer

Beti v0.0.0-x.0.1.89 Copyright 2015 Mark K Mueller. All rights reserved.
Use of this source code is governed by a BSD-style license that can be found in the |LICENSE|./LICENSE.html file.
